[tool.poetry]
name = "xbmini-py"
version = "0.3.0"
description = "Python Toolkit for the GCDC HAM"
authors = ["sco1 <sco1.git@gmail.com>"]

readme = "README.md"
homepage = "https://github.com/sco1/"
repository = "https://github.com/sco1/xbmini-py"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Visualization",
    "Typing :: Typed",
]
packages = [{include="xbmini"}]

include = [
    {path = "./CHANGELOG.md", format = "sdist"}
]

[tool.poetry.scripts]
xbmini = "xbmini.cli:xbmini_cli"

[tool.poetry.dependencies]
python = "^3.11"
kaleido = "^0.2, != 0.2.1.post1"
matplotlib-window = "^1.0"
pandas = "^2.1"
plotly = "^5.10"
sco1-misc = "^0.1"
typer-slim = "^0.12"

dash = {version="^2.6", optional=true}
dash-bootstrap-components = {version="^1.2", optional=true}

[tool.poetry.extras]
trimapp = ["dash", "dash-bootstrap-components"]

[tool.poetry.dev-dependencies]
black = {extras = ["jupyter"], version = "^24.0"}
bump2version = "^1.0"
cogapp = "^3.3"
flake8 = "^7.0"
flake8-annotations = "^3.0"
isort = "^5.12"
mypy = "^1.0"
pre-commit = "^3.0"
pytest = "^8.0"
pytest-cov = "^5.0"
pytest-randomly = "^3.12"
ruff = "^0.5"
tox = "^4.4"

[tool.black]
line-length = 100

[tool.isort]
case_sensitive = true
known_first_party = "xbmini,tests"
no_lines_before = "LOCALFOLDER"
order_by_type = false
profile = "black"
line_length = 100

[tool.mypy]
disallow_incomplete_defs = true
disallow_untyped_calls = true
disallow_untyped_decorators = false
disallow_untyped_defs = true
ignore_missing_imports = true
no_implicit_optional = true
show_error_codes = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_configs = true
warn_unused_ignores = true

[build-system]
requires = ["poetry-core>=1.2"]
build-backend = "poetry.core.masonry.api"
